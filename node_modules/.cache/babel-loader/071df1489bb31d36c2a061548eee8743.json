{"ast":null,"code":"var _jsxFileName = \"/Users/s0g03gv/Documents/I_love_Appy/covid19india-react/src/components/timeseries.js\";\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport * as d3 from 'd3';\n\nfunction TimeSeries(props) {\n  const [timeseries, setTimeseries] = useState([]);\n  const [datapoint, setDatapoint] = useState({});\n  const [index, setIndex] = useState(10);\n  const [mode, setMode] = useState(props.mode);\n  const [logMode, setLogMode] = useState(props.logMode);\n  const [update, setUpdate] = useState(-1);\n  const graphElement1 = useRef(null);\n  const graphElement2 = useRef(null);\n  const graphElement3 = useRef(null);\n  const graphElement4 = useRef(null);\n  const graphElement5 = useRef(null);\n  const graphElement6 = useRef(null);\n  useEffect(() => {\n    if (props.timeseries.length > 1) {\n      setTimeseries(props.timeseries);\n    }\n  }, [props.timeseries]);\n  useEffect(() => {\n    setMode(props.mode);\n    setUpdate(u => u + 1);\n  }, [props.mode]);\n  useEffect(() => {\n    setLogMode(props.logMode);\n    setUpdate(u => u + 1);\n  }, [props.logMode]);\n  const graphData = useCallback(timeseries => {\n    const data = timeseries;\n    setDatapoint(timeseries[timeseries.length - 1]);\n    setIndex(timeseries.length - 1);\n    const svg1 = d3.select(graphElement1.current);\n    const svg2 = d3.select(graphElement2.current);\n    const svg3 = d3.select(graphElement3.current);\n    const svg4 = d3.select(graphElement4.current);\n    const svg5 = d3.select(graphElement5.current);\n    const svg6 = d3.select(graphElement6.current); // Margins\n\n    const margin = {\n      top: 0,\n      right: 20,\n      bottom: 50,\n      left: 20\n    };\n    const width = 650 - margin.left - margin.right;\n    const height = 200 - margin.top - margin.bottom;\n    const dateMin = new Date(data[0]['date'] + '2020');\n    dateMin.setDate(dateMin.getDate() - 1);\n    const dateMax = new Date(data[timeseries.length - 1]['date'] + '2020');\n    dateMax.setDate(dateMax.getDate() + 1);\n    const x = d3.scaleTime().domain([dateMin, dateMax]).range([margin.left, width]);\n    const indexScale = d3.scaleLinear().domain([0, timeseries.length]).range([margin.left, width]); // Arrays of objects\n\n    const svgArray = [svg1, svg2, svg3, svg4, svg5, svg6];\n    const dataTypes = ['totalconfirmed', 'totalrecovered', 'totaldeceased', 'dailyconfirmed', 'dailyrecovered', 'dailydeceased'];\n    const colors = ['#ff073a', '#28a745', '#6c757d', '#ff073a', '#28a745', '#6c757d'];\n    const logCharts = new Set(['totalconfirmed', 'totalrecovered', 'totaldeceased']);\n    const dTypeMaxMap = dataTypes.reduce((a, c) => {\n      a[c] = d3.max(data, d => +d[c]);\n      return a;\n    }, {});\n    const yScales = Object.entries(dTypeMaxMap).map(([type, maxY]) => {\n      // apply mode, logMode, etc -- determine scales once and for all\n      const applyLogMode = maxY => logMode && logCharts.has(type) ? d3.scaleLog().domain([1, 1.1 * maxY]).nice() : d3.scaleLinear().domain([0, 1.1 * maxY]).nice();\n\n      return (mode ? applyLogMode(type.match('^total') ? dTypeMaxMap['totalconfirmed'] : dTypeMaxMap['dailyconfirmed']) : applyLogMode(maxY)).range([height, margin.top]);\n    });\n\n    const y = (dataTypeIdx, day) => {\n      // Scaling mode filters\n      const scale = yScales[dataTypeIdx];\n      const dType = dataTypes[dataTypeIdx];\n      return scale(logMode && logCharts.has(dType) ? Math.max(1, day[dType]) : day[dType]); // max(1,y) for logmode\n    };\n    /* Focus dots */\n\n\n    const focus = svgArray.map((d, i) => {\n      return d.append('g').append('circle').attr('fill', colors[i]).attr('stroke', colors[i]).attr('r', 5).attr('cx', x(new Date(data[timeseries.length - 1]['date'] + '2020'))).attr('cy', y(i, data[timeseries.length - 1]));\n    });\n\n    function mouseout() {\n      setDatapoint(data[timeseries.length - 1]);\n      setIndex(timeseries.length - 1);\n      focus.forEach((d, i) => {\n        d.attr('cx', x(new Date(data[timeseries.length - 1]['date'] + '2020'))).attr('cy', y(i, data[timeseries.length - 1]));\n      });\n    }\n\n    function mousemove() {\n      const xm = d3.mouse(this)[0];\n      const i = Math.round(indexScale.invert(xm));\n\n      if (0 <= i && i < timeseries.length) {\n        const d = data[i];\n        setDatapoint(d);\n        setIndex(i);\n        focus.forEach((f, j) => {\n          f.attr('cx', x(new Date(d['date'] + '2020'))).attr('cy', y(j, d));\n        });\n      }\n    }\n\n    const tickCount = scaleIdx => {\n      const dType = dataTypes[scaleIdx];\n      return logMode && logCharts.has(dType) ? Math.ceil(Math.log10(yScales[scaleIdx].domain()[1])) : 5;\n    };\n    /* Begin drawing charts */\n\n\n    svgArray.forEach((s, i) => {\n      /* X axis */\n      s.append('g').attr('transform', 'translate(0,' + height + ')').attr('class', 'axis').call(d3.axisBottom(x));\n      /* Y axis */\n\n      s.append('g').attr('transform', `translate(${width}, ${0})`).attr('class', 'axis').call(d3.axisRight(yScales[i]).ticks(tickCount(i)).tickPadding(5).tickFormat(d3.format('~s')));\n      /* Focus dots */\n\n      s.on('mousemove', mousemove).on('touchmove', mousemove).on('mouseout', mouseout).on('touchend', mouseout);\n      /* Path dots */\n\n      const dots = s.selectAll('.dot').data(data).enter().append('circle').attr('fill', colors[i]).attr('stroke', colors[i]).attr('cursor', 'pointer').attr('cx', d => {\n        return x(new Date(d['date'] + '2020'));\n      }).attr('cy', d => y(i, d));\n      /* Paths */\n\n      if (i < Math.floor(svgArray.length / 2)) {\n        s.append('path').datum(data).attr('fill', 'none').attr('stroke', colors[i] + '99').attr('stroke-width', 5).attr('cursor', 'pointer').attr('d', d3.line().x(d => {\n          return x(new Date(d['date'] + '2020'));\n        }).y(d => y(i, d)).curve(d3.curveCardinal));\n        dots.attr('r', 3);\n      } else {\n        s.selectAll('stem-line').data(data).enter().append('line').attr('x1', d => {\n          return x(new Date(d['date'] + '2020'));\n        }).attr('y1', height).attr('x2', d => {\n          return x(new Date(d['date'] + '2020'));\n        }).attr('y2', d => y(i, d)).style('stroke', colors[i] + '99').style('stroke-width', 4);\n        dots.attr('r', 2);\n      }\n    });\n  }, [logMode, mode]);\n  const refreshGraphs = useCallback(() => {\n    const graphs = [graphElement1, graphElement2, graphElement3, graphElement4, graphElement5, graphElement6];\n\n    for (let i = 0; i < graphs.length; i++) {\n      d3.select(graphs[i].current).selectAll('*').remove();\n    }\n  }, []);\n  useEffect(() => {\n    if (update > 0) {\n      refreshGraphs();\n    }\n  }, [update, refreshGraphs]);\n  useEffect(() => {\n    if (timeseries.length > 1) {\n      graphData(timeseries);\n    }\n  }, [timeseries, graphData]);\n  const yesterdayDate = new Date();\n  yesterdayDate.setDate(yesterdayDate.getDate() - 1);\n  const lastDate = new Date(datapoint['date'] + '2020');\n  const isYesterday = lastDate.getMonth() === yesterdayDate.getMonth() && lastDate.getDate() === yesterdayDate.getDate();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"TimeSeries-Parent fadeInUp\",\n    style: {\n      animationDelay: '1.7s'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timeseries\",\n    style: {\n      display: props.type === 1 ? 'flex' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"svg-parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  }, \"Confirmed\"), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }, isYesterday ? `${datapoint['date']} Yesterday` : datapoint['date']), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 15\n    }\n  }, datapoint['totalconfirmed']), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 15\n    }\n  }, timeseries.length > 0 && index !== 0 ? timeseries[index]['totalconfirmed'] - timeseries[index - 1]['totalconfirmed'] >= 0 ? '+' + (timeseries[index]['totalconfirmed'] - timeseries[index - 1]['totalconfirmed']) : timeseries[index]['totalconfirmed'] - timeseries[index - 1]['totalconfirmed'] : ''))), /*#__PURE__*/React.createElement(\"svg\", {\n    ref: graphElement1,\n    width: \"650\",\n    height: \"200\",\n    viewBox: \"0 0 650 200\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"svg-parent is-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats is-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 13\n    }\n  }, \"Recovered\"), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }\n  }, isYesterday ? `${datapoint['date']} Yesterday` : datapoint['date']), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 15\n    }\n  }, datapoint['totalrecovered']), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 15\n    }\n  }, timeseries.length > 0 && index !== 0 ? timeseries[index]['totalrecovered'] - timeseries[index - 1]['totalrecovered'] >= 0 ? '+' + (timeseries[index]['totalrecovered'] - timeseries[index - 1]['totalrecovered']) : timeseries[index]['totalrecovered'] - timeseries[index - 1]['totalrecovered'] : ''))), /*#__PURE__*/React.createElement(\"svg\", {\n    ref: graphElement2,\n    width: \"650\",\n    height: \"200\",\n    viewBox: \"0 0 650 200\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"svg-parent is-gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats is-gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 13\n    }\n  }, \"Deceased\"), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 13\n    }\n  }, isYesterday ? `${datapoint['date']} Yesterday` : datapoint['date']), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 15\n    }\n  }, datapoint['totaldeceased']), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 15\n    }\n  }, timeseries.length > 0 && index !== 0 ? timeseries[index]['totaldeceased'] - timeseries[index - 1]['totaldeceased'] >= 0 ? '+' + (timeseries[index]['totaldeceased'] - timeseries[index - 1]['totaldeceased']) : timeseries[index]['totaldeceased'] - timeseries[index - 1]['totaldeceased'] : ''))), /*#__PURE__*/React.createElement(\"svg\", {\n    ref: graphElement3,\n    width: \"650\",\n    height: \"200\",\n    viewBox: \"0 0 650 200\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timeseries\",\n    style: {\n      display: props.type === 2 ? 'flex' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"svg-parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 13\n    }\n  }, \"Confirmed\"), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 13\n    }\n  }, isYesterday ? `${datapoint['date']} Yesterday` : datapoint['date']), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 15\n    }\n  }, datapoint['dailyconfirmed']), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 15\n    }\n  }, timeseries.length > 0 && index !== 0 ? timeseries[index]['dailyconfirmed'] - timeseries[index - 1]['dailyconfirmed'] >= 0 ? '+' + (timeseries[index]['dailyconfirmed'] - timeseries[index - 1]['dailyconfirmed']) : timeseries[index]['dailyconfirmed'] - timeseries[index - 1]['dailyconfirmed'] : ''))), /*#__PURE__*/React.createElement(\"svg\", {\n    ref: graphElement4,\n    width: \"650\",\n    height: \"200\",\n    viewBox: \"0 0 650 200\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"svg-parent is-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats is-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 13\n    }\n  }, \"Recovered\"), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 13\n    }\n  }, isYesterday ? `${datapoint['date']} Yesterday` : datapoint['date']), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 15\n    }\n  }, datapoint['dailyrecovered']), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 15\n    }\n  }, timeseries.length > 0 && index !== 0 ? timeseries[index]['dailyrecovered'] - timeseries[index - 1]['dailyrecovered'] >= 0 ? '+' + (timeseries[index]['dailyrecovered'] - timeseries[index - 1]['dailyrecovered']) : timeseries[index]['dailyrecovered'] - timeseries[index - 1]['dailyrecovered'] : ''))), /*#__PURE__*/React.createElement(\"svg\", {\n    ref: graphElement5,\n    width: \"650\",\n    height: \"200\",\n    viewBox: \"0 0 650 200\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"svg-parent is-gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats is-gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 13\n    }\n  }, \"Deceased\"), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 13\n    }\n  }, isYesterday ? `${datapoint['date']} Yesterday` : datapoint['date']), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 15\n    }\n  }, datapoint['dailydeceased']), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 15\n    }\n  }, timeseries.length > 0 && index !== 0 ? timeseries[index]['dailydeceased'] - timeseries[index - 1]['dailydeceased'] >= 0 ? '+' + (timeseries[index]['dailydeceased'] - timeseries[index - 1]['dailydeceased']) : timeseries[index]['dailydeceased'] - timeseries[index - 1]['dailydeceased'] : ''))), /*#__PURE__*/React.createElement(\"svg\", {\n    ref: graphElement6,\n    width: \"650\",\n    height: \"200\",\n    viewBox: \"0 0 650 200\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default TimeSeries;","map":{"version":3,"sources":["/Users/s0g03gv/Documents/I_love_Appy/covid19india-react/src/components/timeseries.js"],"names":["React","useState","useEffect","useRef","useCallback","d3","TimeSeries","props","timeseries","setTimeseries","datapoint","setDatapoint","index","setIndex","mode","setMode","logMode","setLogMode","update","setUpdate","graphElement1","graphElement2","graphElement3","graphElement4","graphElement5","graphElement6","length","u","graphData","data","svg1","select","current","svg2","svg3","svg4","svg5","svg6","margin","top","right","bottom","left","width","height","dateMin","Date","setDate","getDate","dateMax","x","scaleTime","domain","range","indexScale","scaleLinear","svgArray","dataTypes","colors","logCharts","Set","dTypeMaxMap","reduce","a","c","max","d","yScales","Object","entries","map","type","maxY","applyLogMode","has","scaleLog","nice","match","y","dataTypeIdx","day","scale","dType","Math","focus","i","append","attr","mouseout","forEach","mousemove","xm","mouse","round","invert","f","j","tickCount","scaleIdx","ceil","log10","s","call","axisBottom","axisRight","ticks","tickPadding","tickFormat","format","on","dots","selectAll","enter","floor","datum","line","curve","curveCardinal","style","refreshGraphs","graphs","remove","yesterdayDate","lastDate","isYesterday","getMonth","animationDelay","display"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef, useCallback} from 'react';\nimport * as d3 from 'd3';\n\nfunction TimeSeries(props) {\n  const [timeseries, setTimeseries] = useState([]);\n  const [datapoint, setDatapoint] = useState({});\n  const [index, setIndex] = useState(10);\n  const [mode, setMode] = useState(props.mode);\n  const [logMode, setLogMode] = useState(props.logMode);\n  const [update, setUpdate] = useState(-1);\n\n  const graphElement1 = useRef(null);\n  const graphElement2 = useRef(null);\n  const graphElement3 = useRef(null);\n  const graphElement4 = useRef(null);\n  const graphElement5 = useRef(null);\n  const graphElement6 = useRef(null);\n\n  useEffect(() => {\n    if (props.timeseries.length > 1) {\n      setTimeseries(props.timeseries);\n    }\n  }, [props.timeseries]);\n\n  useEffect(() => {\n    setMode(props.mode);\n    setUpdate((u) => u + 1);\n  }, [props.mode]);\n\n  useEffect(() => {\n    setLogMode(props.logMode);\n    setUpdate((u) => u + 1);\n  }, [props.logMode]);\n\n  const graphData = useCallback(\n    (timeseries) => {\n      const data = timeseries;\n      setDatapoint(timeseries[timeseries.length - 1]);\n      setIndex(timeseries.length - 1);\n\n      const svg1 = d3.select(graphElement1.current);\n      const svg2 = d3.select(graphElement2.current);\n      const svg3 = d3.select(graphElement3.current);\n      const svg4 = d3.select(graphElement4.current);\n      const svg5 = d3.select(graphElement5.current);\n      const svg6 = d3.select(graphElement6.current);\n\n      // Margins\n      const margin = {top: 0, right: 20, bottom: 50, left: 20};\n      const width = 650 - margin.left - margin.right;\n      const height = 200 - margin.top - margin.bottom;\n\n      const dateMin = new Date(data[0]['date'] + '2020');\n      dateMin.setDate(dateMin.getDate() - 1);\n      const dateMax = new Date(data[timeseries.length - 1]['date'] + '2020');\n      dateMax.setDate(dateMax.getDate() + 1);\n\n      const x = d3\n        .scaleTime()\n        .domain([dateMin, dateMax])\n        .range([margin.left, width]);\n\n      const indexScale = d3\n        .scaleLinear()\n        .domain([0, timeseries.length])\n        .range([margin.left, width]);\n\n      // Arrays of objects\n      const svgArray = [svg1, svg2, svg3, svg4, svg5, svg6];\n      const dataTypes = [\n        'totalconfirmed',\n        'totalrecovered',\n        'totaldeceased',\n        'dailyconfirmed',\n        'dailyrecovered',\n        'dailydeceased',\n      ];\n      const colors = [\n        '#ff073a',\n        '#28a745',\n        '#6c757d',\n        '#ff073a',\n        '#28a745',\n        '#6c757d',\n      ];\n      const logCharts = new Set([\n        'totalconfirmed',\n        'totalrecovered',\n        'totaldeceased',\n      ]);\n\n      const dTypeMaxMap = dataTypes.reduce((a, c) => {\n        a[c] = d3.max(data, (d) => +d[c]);\n        return a;\n      }, {});\n\n      const yScales = Object.entries(dTypeMaxMap).map(([type, maxY]) => {\n        // apply mode, logMode, etc -- determine scales once and for all\n        const applyLogMode = (maxY) =>\n          logMode && logCharts.has(type)\n            ? d3\n                .scaleLog()\n                .domain([1, 1.1 * maxY])\n                .nice()\n            : d3\n                .scaleLinear()\n                .domain([0, 1.1 * maxY])\n                .nice();\n\n        return (mode\n          ? applyLogMode(\n              type.match('^total')\n                ? dTypeMaxMap['totalconfirmed']\n                : dTypeMaxMap['dailyconfirmed']\n            )\n          : applyLogMode(maxY)\n        ).range([height, margin.top]);\n      });\n\n      const y = (dataTypeIdx, day) => {\n        // Scaling mode filters\n        const scale = yScales[dataTypeIdx];\n        const dType = dataTypes[dataTypeIdx];\n        return scale(\n          logMode && logCharts.has(dType) ? Math.max(1, day[dType]) : day[dType]\n        ); // max(1,y) for logmode\n      };\n\n      /* Focus dots */\n      const focus = svgArray.map((d, i) => {\n        return d\n          .append('g')\n          .append('circle')\n          .attr('fill', colors[i])\n          .attr('stroke', colors[i])\n          .attr('r', 5)\n          .attr('cx', x(new Date(data[timeseries.length - 1]['date'] + '2020')))\n          .attr('cy', y(i, data[timeseries.length - 1]));\n      });\n\n      function mouseout() {\n        setDatapoint(data[timeseries.length - 1]);\n        setIndex(timeseries.length - 1);\n        focus.forEach((d, i) => {\n          d.attr(\n            'cx',\n            x(new Date(data[timeseries.length - 1]['date'] + '2020'))\n          ).attr('cy', y(i, data[timeseries.length - 1]));\n        });\n      }\n\n      function mousemove() {\n        const xm = d3.mouse(this)[0];\n        const i = Math.round(indexScale.invert(xm));\n        if (0 <= i && i < timeseries.length) {\n          const d = data[i];\n          setDatapoint(d);\n          setIndex(i);\n          focus.forEach((f, j) => {\n            f.attr('cx', x(new Date(d['date'] + '2020'))).attr('cy', y(j, d));\n          });\n        }\n      }\n\n      const tickCount = (scaleIdx) => {\n        const dType = dataTypes[scaleIdx];\n        return logMode && logCharts.has(dType)\n          ? Math.ceil(Math.log10(yScales[scaleIdx].domain()[1]))\n          : 5;\n      };\n\n      /* Begin drawing charts */\n      svgArray.forEach((s, i) => {\n        /* X axis */\n        s.append('g')\n          .attr('transform', 'translate(0,' + height + ')')\n          .attr('class', 'axis')\n          .call(d3.axisBottom(x));\n\n        /* Y axis */\n        s.append('g')\n          .attr('transform', `translate(${width}, ${0})`)\n          .attr('class', 'axis')\n          .call(\n            d3\n              .axisRight(yScales[i])\n              .ticks(tickCount(i))\n              .tickPadding(5)\n              .tickFormat(d3.format('~s'))\n          );\n\n        /* Focus dots */\n        s.on('mousemove', mousemove)\n          .on('touchmove', mousemove)\n          .on('mouseout', mouseout)\n          .on('touchend', mouseout);\n\n        /* Path dots */\n        const dots = s\n          .selectAll('.dot')\n          .data(data)\n          .enter()\n          .append('circle')\n          .attr('fill', colors[i])\n          .attr('stroke', colors[i])\n          .attr('cursor', 'pointer')\n          .attr('cx', (d) => {\n            return x(new Date(d['date'] + '2020'));\n          })\n          .attr('cy', (d) => y(i, d));\n\n        /* Paths */\n        if (i < Math.floor(svgArray.length / 2)) {\n          s.append('path')\n            .datum(data)\n            .attr('fill', 'none')\n            .attr('stroke', colors[i] + '99')\n            .attr('stroke-width', 5)\n            .attr('cursor', 'pointer')\n            .attr(\n              'd',\n              d3\n                .line()\n                .x((d) => {\n                  return x(new Date(d['date'] + '2020'));\n                })\n                .y((d) => y(i, d))\n                .curve(d3.curveCardinal)\n            );\n          dots.attr('r', 3);\n        } else {\n          s.selectAll('stem-line')\n            .data(data)\n            .enter()\n            .append('line')\n            .attr('x1', (d) => {\n              return x(new Date(d['date'] + '2020'));\n            })\n            .attr('y1', height)\n            .attr('x2', (d) => {\n              return x(new Date(d['date'] + '2020'));\n            })\n            .attr('y2', (d) => y(i, d))\n            .style('stroke', colors[i] + '99')\n            .style('stroke-width', 4);\n          dots.attr('r', 2);\n        }\n      });\n    },\n    [logMode, mode]\n  );\n\n  const refreshGraphs = useCallback(() => {\n    const graphs = [\n      graphElement1,\n      graphElement2,\n      graphElement3,\n      graphElement4,\n      graphElement5,\n      graphElement6,\n    ];\n    for (let i = 0; i < graphs.length; i++) {\n      d3.select(graphs[i].current).selectAll('*').remove();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (update > 0) {\n      refreshGraphs();\n    }\n  }, [update, refreshGraphs]);\n\n  useEffect(() => {\n    if (timeseries.length > 1) {\n      graphData(timeseries);\n    }\n  }, [timeseries, graphData]);\n\n  const yesterdayDate = new Date();\n  yesterdayDate.setDate(yesterdayDate.getDate() - 1);\n  const lastDate = new Date(datapoint['date'] + '2020');\n  const isYesterday =\n    lastDate.getMonth() === yesterdayDate.getMonth() &&\n    lastDate.getDate() === yesterdayDate.getDate();\n\n  return (\n    <div\n      className=\"TimeSeries-Parent fadeInUp\"\n      style={{animationDelay: '1.7s'}}\n    >\n      <div\n        className=\"timeseries\"\n        style={{display: props.type === 1 ? 'flex' : 'none'}}\n      >\n        <div className=\"svg-parent\">\n          <div className=\"stats\">\n            <h5>Confirmed</h5>\n            <h5>\n              {isYesterday\n                ? `${datapoint['date']} Yesterday`\n                : datapoint['date']}\n            </h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['totalconfirmed']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['totalconfirmed'] -\n                      timeseries[index - 1]['totalconfirmed'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['totalconfirmed'] -\n                        timeseries[index - 1]['totalconfirmed'])\n                    : timeseries[index]['totalconfirmed'] -\n                      timeseries[index - 1]['totalconfirmed']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement1}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n\n        <div className=\"svg-parent is-green\">\n          <div className=\"stats is-green\">\n            <h5>Recovered</h5>\n            <h5>\n              {isYesterday\n                ? `${datapoint['date']} Yesterday`\n                : datapoint['date']}\n            </h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['totalrecovered']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['totalrecovered'] -\n                      timeseries[index - 1]['totalrecovered'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['totalrecovered'] -\n                        timeseries[index - 1]['totalrecovered'])\n                    : timeseries[index]['totalrecovered'] -\n                      timeseries[index - 1]['totalrecovered']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement2}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n\n        <div className=\"svg-parent is-gray\">\n          <div className=\"stats is-gray\">\n            <h5>Deceased</h5>\n            <h5>\n              {isYesterday\n                ? `${datapoint['date']} Yesterday`\n                : datapoint['date']}\n            </h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['totaldeceased']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['totaldeceased'] -\n                      timeseries[index - 1]['totaldeceased'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['totaldeceased'] -\n                        timeseries[index - 1]['totaldeceased'])\n                    : timeseries[index]['totaldeceased'] -\n                      timeseries[index - 1]['totaldeceased']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement3}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n      </div>\n\n      <div\n        className=\"timeseries\"\n        style={{display: props.type === 2 ? 'flex' : 'none'}}\n      >\n        <div className=\"svg-parent\">\n          <div className=\"stats\">\n            <h5>Confirmed</h5>\n            <h5>\n              {isYesterday\n                ? `${datapoint['date']} Yesterday`\n                : datapoint['date']}\n            </h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['dailyconfirmed']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['dailyconfirmed'] -\n                      timeseries[index - 1]['dailyconfirmed'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['dailyconfirmed'] -\n                        timeseries[index - 1]['dailyconfirmed'])\n                    : timeseries[index]['dailyconfirmed'] -\n                      timeseries[index - 1]['dailyconfirmed']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement4}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n\n        <div className=\"svg-parent is-green\">\n          <div className=\"stats is-green\">\n            <h5>Recovered</h5>\n            <h5>\n              {isYesterday\n                ? `${datapoint['date']} Yesterday`\n                : datapoint['date']}\n            </h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['dailyrecovered']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['dailyrecovered'] -\n                      timeseries[index - 1]['dailyrecovered'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['dailyrecovered'] -\n                        timeseries[index - 1]['dailyrecovered'])\n                    : timeseries[index]['dailyrecovered'] -\n                      timeseries[index - 1]['dailyrecovered']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement5}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n\n        <div className=\"svg-parent is-gray\">\n          <div className=\"stats is-gray\">\n            <h5>Deceased</h5>\n            <h5>\n              {isYesterday\n                ? `${datapoint['date']} Yesterday`\n                : datapoint['date']}\n            </h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['dailydeceased']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['dailydeceased'] -\n                      timeseries[index - 1]['dailydeceased'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['dailydeceased'] -\n                        timeseries[index - 1]['dailydeceased'])\n                    : timeseries[index]['dailydeceased'] -\n                      timeseries[index - 1]['dailydeceased']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement6}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TimeSeries;\n"]},"metadata":{},"sourceType":"module"}