{"ast":null,"code":"var _jsxFileName = \"/Users/s0g03gv/Documents/MOM/covid19india-react/src/components/home.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { validateCTS } from '../utils/common-functions';\nimport MapExplorer from './mapexplorer';\nimport TimeSeries from './timeseries';\n\nfunction Home(props) {\n  const [states, setStates] = useState([]);\n  const [stateDistrictWiseData, setStateDistrictWiseData] = useState({});\n  /* const [patients, setPatients] = useState([]);*/\n\n  const [fetched, setFetched] = useState(false);\n  const [graphOption, setGraphOption] = useState(1);\n  const [lastUpdated, setLastUpdated] = useState('');\n  const [timeseries, setTimeseries] = useState([]);\n  const [timeseriesMode, setTimeseriesMode] = useState(true);\n  const [timeseriesLogMode, setTimeseriesLogMode] = useState(false);\n  const [regionHighlighted, setRegionHighlighted] = useState(undefined);\n  useEffect(() => {\n    if (fetched === false) {\n      getStates();\n    }\n  }, [fetched]);\n\n  const getStates = async () => {\n    try {\n      const [response, stateDistrictWiseResponse] = await Promise.all([axios.get('https://api.covid19india.org/data.json'), axios.get('https://api.covid19india.org/state_district_wise.json')\n      /* axios.get('https://api.covid19india.org/raw_data.json'),*/\n      ]);\n      setStates(response.data.statewise);\n      setTimeseries(validateCTS(response.data.cases_time_series));\n      setLastUpdated(response.data.statewise[0].lastupdatedtime);\n      setStateDistrictWiseData(stateDistrictWiseResponse.data);\n      /* setPatients(rawDataResponse.data.raw_data.filter((p) => p.detectedstate));*/\n\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, fetched && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MapExplorer, {\n    states: states,\n    stateDistrictWiseData: stateDistrictWiseData,\n    regionHighlighted: regionHighlighted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timeseries-header fadeInUp\",\n    style: {\n      animationDelay: '1.5s'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"Spread Trends\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `tab ${graphOption === 1 ? 'focused' : ''}`,\n    onClick: () => {\n      setGraphOption(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }\n  }, \"Cumulative\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: `tab ${graphOption === 2 ? 'focused' : ''}`,\n    onClick: () => {\n      setGraphOption(2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  }, \"Daily\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"scale-modes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, \"Scale Modes\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timeseries-mode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"timeseries-mode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  }, \"Uniform\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: timeseriesMode,\n    className: \"switch\",\n    \"aria-label\": \"Checked by default to scale uniformly.\",\n    onChange: event => {\n      setTimeseriesMode(!timeseriesMode);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: `timeseries-logmode ${graphOption !== 1 ? 'disabled' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"timeseries-logmode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }\n  }, \"Logarithmic\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: graphOption === 1 && timeseriesLogMode,\n    className: \"switch\",\n    disabled: graphOption !== 1,\n    onChange: event => {\n      setTimeseriesLogMode(!timeseriesLogMode);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  })))))));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/s0g03gv/Documents/MOM/covid19india-react/src/components/home.js"],"names":["React","useState","useEffect","axios","validateCTS","MapExplorer","TimeSeries","Home","props","states","setStates","stateDistrictWiseData","setStateDistrictWiseData","fetched","setFetched","graphOption","setGraphOption","lastUpdated","setLastUpdated","timeseries","setTimeseries","timeseriesMode","setTimeseriesMode","timeseriesLogMode","setTimeseriesLogMode","regionHighlighted","setRegionHighlighted","undefined","getStates","response","stateDistrictWiseResponse","Promise","all","get","data","statewise","cases_time_series","lastupdatedtime","err","console","log","animationDelay","event"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {\n  validateCTS,\n} from '../utils/common-functions';\n\nimport MapExplorer from './mapexplorer';\nimport TimeSeries from './timeseries';\n\nfunction Home(props) {\n  const [states, setStates] = useState([]);\n  const [stateDistrictWiseData, setStateDistrictWiseData] = useState({});\n  /* const [patients, setPatients] = useState([]);*/\n  const [fetched, setFetched] = useState(false);\n  const [graphOption, setGraphOption] = useState(1);\n  const [lastUpdated, setLastUpdated] = useState('');\n  const [timeseries, setTimeseries] = useState([]);\n  const [timeseriesMode, setTimeseriesMode] = useState(true);\n  const [timeseriesLogMode, setTimeseriesLogMode] = useState(false);\n  const [regionHighlighted, setRegionHighlighted] = useState(undefined);\n\n  useEffect(() => {\n    if (fetched === false) {\n      getStates();\n    }\n  }, [fetched]);\n\n  const getStates = async () => {\n    try {\n      const [response, stateDistrictWiseResponse] = await Promise.all([\n        axios.get('https://api.covid19india.org/data.json'),\n        axios.get('https://api.covid19india.org/state_district_wise.json'),\n        /* axios.get('https://api.covid19india.org/raw_data.json'),*/\n      ]);\n      setStates(response.data.statewise);\n      setTimeseries(validateCTS(response.data.cases_time_series));\n      setLastUpdated(response.data.statewise[0].lastupdatedtime);\n      setStateDistrictWiseData(stateDistrictWiseResponse.data);\n      /* setPatients(rawDataResponse.data.raw_data.filter((p) => p.detectedstate));*/\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n\n  return (\n    <div className=\"Home\">\n      <div className=\"home-right\">\n        {fetched && (\n          <React.Fragment>\n            <MapExplorer\n              states={states}\n              stateDistrictWiseData={stateDistrictWiseData}\n              regionHighlighted={regionHighlighted}\n            />\n\n            <div\n              className=\"timeseries-header fadeInUp\"\n              style={{animationDelay: '1.5s'}}\n            >\n              <h1>Spread Trends</h1>\n              <div className=\"tabs\">\n                <div\n                  className={`tab ${graphOption === 1 ? 'focused' : ''}`}\n                  onClick={() => {\n                    setGraphOption(1);\n                  }}\n                >\n                  <h4>Cumulative</h4>\n                </div>\n                <div\n                  className={`tab ${graphOption === 2 ? 'focused' : ''}`}\n                  onClick={() => {\n                    setGraphOption(2);\n                  }}\n                >\n                  <h4>Daily</h4>\n                </div>\n              </div>\n\n              <div className=\"scale-modes\">\n                <label>Scale Modes</label>\n                <div className=\"timeseries-mode\">\n                  <label htmlFor=\"timeseries-mode\">Uniform</label>\n                  <input\n                    type=\"checkbox\"\n                    checked={timeseriesMode}\n                    className=\"switch\"\n                    aria-label=\"Checked by default to scale uniformly.\"\n                    onChange={(event) => {\n                      setTimeseriesMode(!timeseriesMode);\n                    }}\n                  />\n                </div>\n                <div\n                  className={`timeseries-logmode ${\n                    graphOption !== 1 ? 'disabled' : ''\n                  }`}\n                >\n                  <label htmlFor=\"timeseries-logmode\">Logarithmic</label>\n                  <input\n                    type=\"checkbox\"\n                    checked={graphOption === 1 && timeseriesLogMode}\n                    className=\"switch\"\n                    disabled={graphOption !== 1}\n                    onChange={(event) => {\n                      setTimeseriesLogMode(!timeseriesLogMode);\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* <TimeSeries\n              timeseries={timeseries}\n              type={graphOption}\n              mode={timeseriesMode}\n              logMode={timeseriesLogMode}\n            /> */}\n\n            {/* Testing Rebuild*/}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}